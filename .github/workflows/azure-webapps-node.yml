# This is a basic workflow to deploy a Node.js application to an Azure Web App.
# To configure this workflow:
# 1. Download the Publish Profile for your Azure Web App.
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, and paste the contents of the publish profile into the secret's value.
# 3. Change the value for AZURE_WEBAPP_NAME and optionally AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables.

name: Deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: infranetsmartreportsystem  # change this
  AZURE_WEBAPP_PACKAGE_PATH: '.'               # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '16.x'                       # set this to the node version to use

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          # Caches the Node.js modules for faster builds
          cache: 'npm'
          cache-dependency-path: './infranetsmartreportsystem/package-lock.json'

      - name: 'npm install, build, and test'
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
        # This tells the command to run inside your project folder
        working-directory: './infranetsmartreportsystem'

      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
          # Use the project folder as the source for the deployment
          # This is an important part of the fix
          source: './infranetsmartreportsystem'
